@model ELearning.Model.InstituteViewModel

@{
    var totalcode = Model.institute.ActivatedCode + Model.institute.NonActivatedCode;

    var lsrMarkstudent = Model.InstituteList.SelectMany(i => i.User.Name).Distinct();
    var mark = Model.InstituteList.Select(i => i.MarkSecure);
}
<section id="dashboard">
    <div class="container">
        <div class="m-4"></div>
        <div class="col-lg-12 mx-auto">
            <div class="card">
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-3 text-center">
                            <div class="round-corner green-color">
                                <h6>
                                    <a href="@Url.Action("ActivationCode","Institute")"> Activation code generated @totalcode</a>
                                </h6>
                            </div>
                        </div>
                        <div class="col-lg-3 text-center">
                            <div class="round-corner DodgerBlue-color">
                                <h6>
                                    Student Registered @Model.institute.TotalStudent/@totalcode
                                </h6>
                            </div>
                        </div>
                        <div class="col-lg-3 text-center">
                            <div class="round-corner Violet-color">
                                <h6>
                                    Student Appeared for test @Model.institute.TotalTestAttended/@Model.institute.TotalStudent
                                </h6>
                            </div>
                        </div>
                        <div class="col-lg-3 text-center">
                            <div class="round-corner MediumSeaGreen-color">
                                <h6>
                                    Courses Enrolled @Model.institute.TotalCourses
                                </h6>
                                <br />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <hr class="star-dark mb-5">
        <div class="row">
            @*<div class="col-lg-12 mx-auto">*@
            <div class="col-md-6">
                <h4>% Comparison of students</h4>
                <div class="card">
                    <div class="card-body">
                        <canvas id="studentgraph"></canvas>
                    </div>
                </div>
            </div>
            <div class="col-lg-6">
                <h4>Lesson completed comparison of student</h4>
                <div class="card">
                    <div class="card-body">
                        <canvas id="lesson"></canvas>
                    </div>
                </div>
            </div>
            @*</div>*@
        </div>
    </div>
</section>

@section Scripts {
    <script src="~/js/Chart.min.js"></script>
    <script>

        $(document).ready(function () {

            var strSecure = '@String.Join(",", Model.InstituteList.Select(i => i.MarkSecure).ToList())',
                numbersSecure = strSecure.split(',').map(Number);

            var strLabel = '@String.Join(",", Model.InstituteList.Select(i => i.User.Name).Distinct())',
                stringLabel = strLabel.split(',');

            var chartData = {
                labels: stringLabel,
                datasets: [{
                    data: numbersSecure,
                    backgroundColor: ["red", "blue", "green", "blue", "red", "blue"],

                }]
            };

            var chLine = document.getElementById("studentgraph");
            if (chLine) {
                new Chart(chLine, {
                    type: 'bar',
                    data: chartData,
                    options: {
                        scales: {
                            yAxes: [{
                                ticks: {
                                    beginAtZero: true,
                                    steps: 10,
                                    stepValue: 5,
                                    max: 100
                                }
                            }]
                        },
                        legend: {
                            display: false
                        }
                    }
                });
            }

            var strLesson = '@String.Join(",", Model.InstituteList.Select(i => i.Lesson.Total).Distinct())';                

            var strLessonCompleted = '@String.Join(",", Model.InstituteList.Select(i => i.Lesson.Completed).ToList())',
                numbersLesson = strLessonCompleted.split(',').map(Number);

            var chartData2 = {
                labels: stringLabel,
                datasets: [{
                    data: numbersLesson,
                    backgroundColor: ["red", "blue", "green", "blue", "red", "blue"],
                }]
            };

            var chLine2 = document.getElementById("lesson");
            if (chLine2) {
                new Chart(chLine2, {
                    type: 'bar',
                    data: chartData2,
                    options: {
                        scales: {
                            yAxes: [{
                                ticks: {
                                    beginAtZero: true,
                                    steps: 1,
                                    //stepValue: 5
                                    max: @Model.institute.TotalLesson
                                }
                            }]
                        },
                        legend: {
                            display: false
                        }
                    }
                });
            }
        });
    </script>
}
